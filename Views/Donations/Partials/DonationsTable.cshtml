@model FoodBanksMVC.Models.DonationsModel
@using System.Configuration
@using FoodBanksMVC.Models

@{
    var baseUri = ConfigurationManager.AppSettings[ "SiteBaseUrl" ];
}

<div>
    <div class="table-responsive">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Item</th>
                    <th class="text-center">Donated</th>
                    <th class="text-center">Quantity</th>
                    <th class="text-center">Quality</th>
                    <th>Food Bank</th>
                    <th>Volunteer</th>
                    <th class="text-center"></th>
                </tr>
            </thead>
            <tbody>
                @foreach ( var donation in Model.Donations )
                {
                    <tr id="row_@donation.Id">
                        @Html.Partial( "Partials/DonationTableRow", donation )
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td>Total: @Model.TotalDonations</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td colspan="2" class="text-right">
                        @if ( Model.Links != null && Model.Links.Count > 0 )
                        {
                            var link = Model.Links.FirstOrDefault( x => x.Rel == "previous" );
                            if ( link != null )
                            {
                                var uri = new Uri( baseUri + link.Href );
                                var offSet = HttpUtility.ParseQueryString( uri.Query )[ "offset" ];
                                var limit = HttpUtility.ParseQueryString( uri.Query )[ "limit" ];
                                <a style="cursor: pointer;" data-offset="@offSet" data-limit="@limit" onclick="PageDonations(@offSet, @limit)">Previous</a> <span> | </span>
                            }
                            else
                            {
                                <span>Previous | </span>
                            }

                            link = Model.Links.FirstOrDefault( x => x.Rel == "next" );
                            if ( link != null )
                            {
                                var uri = new Uri( baseUri + link.Href );
                                var offSet = HttpUtility.ParseQueryString( uri.Query )[ "offset" ];
                                var limit = HttpUtility.ParseQueryString( uri.Query )[ "limit" ];
                                if ( Model.TotalDonations > int.Parse( limit ) )
                                {
                                    <a style="cursor: pointer;" data-offset="@offSet" data-limit="@limit" onclick="PageDonations(@offSet, @limit)">Next</a>
                                }
                                else
                                {
                                    <span>Next</span>
                                }
                            }
                            else
                            {
                                <span>Next</span>
                            }
                        }
                        else
                        {
                            <span>Previous | Next </span>
                        }
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>